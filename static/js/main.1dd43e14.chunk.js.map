{"version":3,"sources":["logo.svg","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackButton.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Notification.jsx","Components/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["Statistics","prop","style","marginRight","good","neutral","bad","total","positiveFeedback","FeedbackButton","margin","type","onClick","handle","btnName","FeedbackOption","handleGood","handleNeutral","handleBad","Section","props","title","children","Notification","message","Feedback","state","evt","setState","pr","countTotalFeedback","this","countPositiveFeedbackPercentage","toFixed","FeedbackOptions","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,iCCkBAA,MAhBf,SAAoBC,GAClB,OACE,gCACE,4CACA,uBAAMC,MAAO,CAAEC,YAAa,QAA5B,mBAA6CF,EAAKG,QAClD,uBAAMF,MAAO,CAAEC,YAAa,QAA5B,sBAAgDF,EAAKI,WACrD,uBAAMH,MAAO,CAAEC,YAAa,QAA5B,kBAA4CF,EAAKK,OACjD,2CAAcL,EAAKM,SACnB,oDAEGN,EAAKO,iBAFR,WCFSC,MARf,SAAwBR,GACtB,OACE,wBAAQC,MAAO,CAAEQ,OAAQ,QAAUC,KAAK,SAASC,QAASX,EAAKY,OAA/D,SACGZ,EAAKa,WCSGC,MAVf,YAAmE,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,UACnD,OACE,oCACE,cAAC,EAAD,CAAgBJ,QAAQ,OAAOD,OAAQG,IACvC,cAAC,EAAD,CAAgBF,QAAQ,UAAUD,OAAQI,IAC1C,cAAC,EAAD,CAAgBH,QAAQ,MAAMD,OAAQK,QCE7BC,MATf,SAAiBC,GACf,OACE,oCACE,6BAAKA,EAAMC,QACVD,EAAME,aCIEC,MARf,SAAsBH,GACpB,OACE,8BACE,6BAAKA,EAAMI,aC+DFC,E,4MA1DbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,WAAa,SAACW,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEzB,KAAMyB,EAAGzB,KAAO,O,EAI7Ba,cAAgB,SAACU,GACf,EAAKC,UAAS,SAACC,GACb,MAAO,CAAExB,QAASwB,EAAGxB,QAAU,O,EAInCa,UAAY,SAACS,GACX,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEvB,IAAKuB,EAAGvB,IAAM,O,uDAKzB,IAAMwB,EACJC,KAAKL,MAAMtB,KAAO2B,KAAKL,MAAMrB,QAAU0B,KAAKL,MAAMpB,IAI9C0B,EAFgC,IAAlBD,KAAKL,MAAMtB,KAAc0B,EAAsB,IAAM,EAGlD,IAAlBC,KAAKL,MAAMtB,KAAc0B,GACN,IAAlBC,KAAKL,MAAMtB,KAAc0B,GAAoBG,QAAQ,GAE3D,OACE,eAAC,EAAD,CAASZ,MAAM,wBAAf,UACE,cAACa,EAAD,CACElB,WAAYe,KAAKf,WACjBC,cAAec,KAAKd,cACpBC,UAAWa,KAAKb,YAGjBY,EAAqB,EACpB,cAAC,EAAD,CACE1B,KAAM2B,KAAKL,MAAMtB,KACjBC,QAAS0B,KAAKL,MAAMrB,QACpBC,IAAKyB,KAAKL,MAAMpB,IAChBC,MAAOuB,EACPtB,iBAAkBwB,IAGpB,cAAC,EAAD,CAAcR,QAAQ,6B,GApDTW,aCMRC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1dd43e14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nfunction Statistics(prop) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <span style={{ marginRight: \"10px\" }}>Good: {prop.good}</span>\r\n      <span style={{ marginRight: \"10px\" }}>Neutral: {prop.neutral}</span>\r\n      <span style={{ marginRight: \"10px\" }}>Bad: {prop.bad}</span>\r\n      <span>Total: {prop.total}</span>\r\n      <h2>\r\n        Positive feedback:\r\n        {prop.positiveFeedback}%\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","function FeedbackButton(prop) {\r\n  return (\r\n    <button style={{ margin: \"10px\" }} type=\"button\" onClick={prop.handle}>\r\n      {prop.btnName}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FeedbackButton;\r\n","import FeedbackButton from \"./FeedbackButton\";\r\n\r\nfunction FeedbackOption({ handleGood, handleNeutral, handleBad }) {\r\n  return (\r\n    <section>\r\n      <FeedbackButton btnName=\"Good\" handle={handleGood} />\r\n      <FeedbackButton btnName=\"Neutral\" handle={handleNeutral} />\r\n      <FeedbackButton btnName=\"Bad\" handle={handleBad} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FeedbackOption;\r\n","function Section(props) {\r\n  return (\r\n    <section>\r\n      <h2>{props.title}</h2>\r\n      {props.children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","function Notification(props) {\r\n  return (\r\n    <div>\r\n      <h2>{props.message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Section/Section\";\r\nimport Notification from \"./Statistics/Notification\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGood = (evt) => {\r\n    this.setState((pr) => {\r\n      return { good: pr.good + 1 };\r\n    });\r\n  };\r\n\r\n  handleNeutral = (evt) => {\r\n    this.setState((pr) => {\r\n      return { neutral: pr.neutral + 1 };\r\n    });\r\n  };\r\n\r\n  handleBad = (evt) => {\r\n    this.setState((pr) => {\r\n      return { bad: pr.bad + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const countTotalFeedback =\r\n      this.state.good + this.state.neutral + this.state.bad;\r\n\r\n    const ifInteger = ((this.state.good * 100) / countTotalFeedback) % 1 === 0;\r\n\r\n    const countPositiveFeedbackPercentage = ifInteger\r\n      ? (this.state.good * 100) / countTotalFeedback\r\n      : ((this.state.good * 100) / countTotalFeedback).toFixed(2);\r\n\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          handleGood={this.handleGood}\r\n          handleNeutral={this.handleNeutral}\r\n          handleBad={this.handleBad}\r\n        />\r\n\r\n        {countTotalFeedback > 0 ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={countTotalFeedback}\r\n            positiveFeedback={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Feedback from \"./Components/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}